provider "aws" {
    access_key = "${var.aws_access_key}"
    secret_key = "${var.aws_secret_key}"
    region = "${var.region}"
}
# VPC
resource "aws_vpc" "vpc-step" {
    cidr_block = "172.16.0.0/21"
    instance_tenancy = "default"
    enable_dns_support = "true"
    enable_dns_hostnames = "false"
    tags = {
      Name = "vpc-step"
    }
}
# インターネットゲートウェイ
resource "aws_internet_gateway" "igw-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    depends_on = [aws_vpc.vpc-step]
    tags = {
      Name = "igw-step"
    }
}
# サブネット
resource "aws_subnet" "pub-a-subnet-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    cidr_block = "172.16.1.0/24"
    availability_zone = "ap-northeast-1a"
    tags = {
      Name = "pub-a-subnet-step"
    }
}
resource "aws_subnet" "pub-c-subnet-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    cidr_block = "172.16.2.0/24"
    availability_zone = "ap-northeast-1c"
    tags = {
      Name = "pub-c-subnet-step"
    }
}
resource "aws_subnet" "private-a-subnet-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    cidr_block = "172.16.3.0/24"
    availability_zone = "ap-northeast-1a"
    tags = {
      Name = "private-a-subnet-step"
    }
}
resource "aws_subnet" "private-c-subnet-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    cidr_block = "172.16.4.0/24"
    availability_zone = "ap-northeast-1c"
    tags = {
      Name = "private-c-subnet-step"
    }
}
resource "aws_subnet" "privateII-a-subnet-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    cidr_block = "172.16.5.0/24"
    availability_zone = "ap-northeast-1a"
    tags = {
      Name = "privateII-a-subnet-step"
    }
}
# ルートテーブル
resource "aws_route_table" "rtb-step" {
    vpc_id = "${aws_vpc.vpc-step.id}"
    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = "${aws_internet_gateway.igw-step.id}"
    }
    tags = {
      Name = "rtb-step"
    }
}
# ルートテーブルのサブネット関連付け
resource "aws_route_table_association" "public_1a" {
    route_table_id = "${aws_route_table.rtb-step.id}"
    subnet_id = "${aws_subnet.pub-a-subnet-step.id}"
}
resource "aws_route_table_association" "public_1c" {
    route_table_id = "${aws_route_table.rtb-step.id}"
    subnet_id = "${aws_subnet.pub-c-subnet-step.id}"
}
resource "aws_route_table_association" "private_1a" {
    route_table_id = "${aws_route_table.rtb-step.id}"
    subnet_id = "${aws_subnet.private-a-subnet-step.id}"
}
resource "aws_route_table_association" "private_1c" {
    route_table_id = "${aws_route_table.rtb-step.id}"
    subnet_id = "${aws_subnet.private-c-subnet-step.id}"
}
resource "aws_route_table_association" "privateII_1a" {
    route_table_id = "${aws_route_table.rtb-step.id}"
    subnet_id = "${aws_subnet.privateII-a-subnet-step.id}"
}
# セキュリティグループ
resource "aws_security_group" "scg-step-bastion" {
    name = "scg-step-bastion"
    description = "This security group was generated by AWS Marketplace and is based on recommended settings for LAMP Stack CentOS 7 version 20210403 provided by Supported Images"
    vpc_id = "${aws_vpc.vpc-step.id}"
    ingress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["182.168.33.163/32"]
        description = ""
    }
    ingress {
        from_port = 49222
        to_port = 49222
        protocol = "tcp"
        cidr_blocks = ["182.168.33.163/32"]
        description = ""
    }
    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    egress {
        from_port = 0
        to_port = 0
        protocol = "-1"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    tags = {
      Name = "step-bastion"
    }
}
resource "aws_security_group" "scg-stepweb1" {
    name = "scg-stepweb1"
    description = "launch-wizard-1 created 2022-02-26T16:59:35.808+09:00"
    vpc_id = "${aws_vpc.vpc-step.id}"
    ingress {
        from_port = 49222
        to_port = 49222
        protocol = "tcp"
        security_groups = [aws_security_group.scg-step-bastion.id]
        description = ""
    }
    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    egress {
        from_port = 0
        to_port = 0
        protocol = "-1"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    tags = {
      Name = "step-web1"
    }
}
resource "aws_security_group" "scg_alb-step" {
    name = "scg_alb-step"
    description = "scg_alb-step"
    vpc_id = "${aws_vpc.vpc-step.id}"
    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
        ipv6_cidr_blocks = ["::/0"]
        description = ""
    }
    ingress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
        ipv6_cidr_blocks = ["::/0"]
        description = ""
    }
    egress {
        from_port = 0
        to_port = 0
        protocol = "-1"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    tags = {
      Name = "step-alb"
    }
}
resource "aws_security_group" "scg-rds-step" {
    name = "scg-rds-step"
    description = "step-rds"
    vpc_id = "${aws_vpc.vpc-step.id}"
    ingress {
        from_port = 3306
        to_port = 3306
        protocol = "tcp"
        security_groups = [aws_security_group.scg-stepweb1.id]
        description = ""
    }
    egress {
        from_port = 0
        to_port = 0
        protocol = "-1"
        cidr_blocks = ["0.0.0.0/0"]
        description = ""
    }
    tags = {
      Name = "step-rds"
    }
}
# インスタンス
resource "aws_instance" "step-web1" {
    ami = "${var.images.step-web1}"
    instance_type = "t2.micro"
    key_name = "key-step-bastion"
    vpc_security_group_ids = [
      "${aws_security_group.scg-stepweb1.id}"
    ]
    subnet_id = "${aws_subnet.private-a-subnet-step.id}"
    associate_public_ip_address = "true"
    root_block_device {
      volume_type = "gp2"
      volume_size = "30"
      delete_on_termination = false
      tags = {
        Name = "step-web1"
      }
    }
    tags = {
        Name = "step-web1"
    }
}
resource "aws_instance" "step-bastion" {
    ami = "${var.images.step-bastion}"
    instance_type = "t2.micro"
    key_name = "key-step-bastion"
    vpc_security_group_ids = [
      "${aws_security_group.scg-step-bastion.id}"
    ]
    subnet_id = "${aws_subnet.pub-c-subnet-step.id}"
    associate_public_ip_address = "false"
    root_block_device {
      volume_type = "gp2"
      volume_size = "30"
      delete_on_termination = false
      tags = {
        Name = "step-bastion"
      }
    }
    tags = {
        Name = "step-bastion"
    }
}
# ALB
resource "aws_lb" "alb-step" {
  desync_mitigation_mode     = "defensive"
  drop_invalid_header_fields = "false"
  enable_deletion_protection = "false"
  enable_http2               = "true"
  enable_waf_fail_open       = "false"
  idle_timeout               = "60"
  internal                   = "false"
  ip_address_type            = "ipv4"
  load_balancer_type         = "application"
  name                       = "alb-step"
  security_groups            = [aws_security_group.scg_alb-step.id]
  subnets = [
    "${aws_subnet.private-a-subnet-step.id}",
    "${aws_subnet.private-c-subnet-step.id}"
  ]
}
# ALB リスナー
resource "aws_lb_listener" "http" {
  default_action {
    order = "1"
    redirect {
      host        = "smi11.com"
      path        = "/#{path}"
      port        = "443"
      protocol    = "HTTPS"
      query       = "#{query}"
      status_code = "HTTP_301"
    }
    type = "redirect"
  }
  load_balancer_arn = "${aws_lb.alb-step.id}"
  port              = "80"
  protocol          = "HTTP"
}
# ACM発行済みでないと作成されない↓（ドメイン他社管理の場合、ネームサーバー登録必要あり）
resource "aws_lb_listener" "https" {
  certificate_arn = "${aws_acm_certificate.acm-smi11-com.id}"
  default_action {
    order            = "1"
    target_group_arn = "${aws_lb_target_group.tg-alb-step1.id}"
    type             = "forward"
  }
  load_balancer_arn = "${aws_lb.alb-step.id}"
  port              = "443"
  protocol          = "HTTPS"
  ssl_policy        = "ELBSecurityPolicy-FS-1-2-Res-2020-10"
}
# ALB ターゲットグループ
resource "aws_lb_target_group" "tg-alb-step1" {
  deregistration_delay = "300"
  health_check {
    enabled             = "true"
    healthy_threshold   = "5"
    interval            = "30"
    matcher             = "200"
    path                = "/healthcheck.html"
    port                = "traffic-port"
    protocol            = "HTTP"
    timeout             = "5"
    unhealthy_threshold = "2"
  }
  load_balancing_algorithm_type = "round_robin"
  name                          = "tg-alb-step1"
  port                          = "80"
  protocol                      = "HTTP"
  protocol_version              = "HTTP1"
  slow_start                    = "0"
  stickiness {
    cookie_duration = "86400"
    enabled         = "false"
    type            = "lb_cookie"
  }
  target_type = "instance"
  vpc_id      = "${aws_vpc.vpc-step.id}"
}
# ALB ターゲットグループ、ターゲット
resource "aws_lb_target_group_attachment" "tg-alb-step1-target" {
  target_group_arn = "${aws_lb_target_group.tg-alb-step1.id}"
  target_id        = "${aws_instance.step-web1.id}"
  port             = 80
}
# RDS
resource "aws_db_instance" "rds-step" {
  allocated_storage                     = "20"
  auto_minor_version_upgrade            = "false"
  availability_zone                     = "ap-northeast-1a"
  backup_retention_period               = "7"
  backup_window                         = "13:37-14:07"
  ca_cert_identifier                    = "rds-ca-2019"
  copy_tags_to_snapshot                 = "true"
  customer_owned_ip_enabled             = "false"
  db_subnet_group_name                  = "${aws_db_subnet_group.subnet-group-step.name}"
  deletion_protection                   = "false"
  engine                                = "mysql"
  engine_version                        = "5.7.30"
  iam_database_authentication_enabled   = "false"
  identifier                            = "rds-step"
  instance_class                        = "db.t2.micro"
  iops                                  = "0"
  license_model                         = "general-public-license"
  maintenance_window                    = "wed:20:20-wed:20:50"
  max_allocated_storage                 = "0"
  monitoring_interval                   = "0"
  multi_az                              = "false"
  option_group_name                     = "default:mysql-5-7"
  parameter_group_name                  = "default.mysql5.7"
  performance_insights_enabled          = "false"
  performance_insights_retention_period = "0"
  port                                  = "3306"
  publicly_accessible                   = "false"
  storage_encrypted                     = "false"
  storage_type                          = "gp2"
  username                              = "step_admin"
  vpc_security_group_ids                = ["${aws_security_group.scg-rds-step.id}"]
  skip_final_snapshot                   = true
  snapshot_identifier                   = "${var.rds_snapshots.rds-step}"
}
# RDS サブネットグループ
resource "aws_db_subnet_group" "subnet-group-step" {
  description = "Created from the RDS Management Console"
  name        = "default-${aws_vpc.vpc-step.id}"
  subnet_ids  = [
    "${aws_subnet.pub-a-subnet-step.id}",
    "${aws_subnet.pub-c-subnet-step.id}",
    "${aws_subnet.private-a-subnet-step.id}",
    "${aws_subnet.private-c-subnet-step.id}",
    "${aws_subnet.privateII-a-subnet-step.id}"
  ]
}
# Route53 ホストゾーン
resource "aws_route53_zone" "smi11-com" {
  comment       = "step"
  force_destroy = "false"
  name          = "smi11.com"
  tags = {
    name = "step"
  }
  tags_all = {
    name = "step"
  }
}
# Route53 レコード
# resource "aws_route53_record" "smi11-com-CNAME1" {
#   name    = "6xt46tpx2c3i52knso4ajdwkqn7n3ayj._domainkey.smi11.com"
#   records = ["6xt46tpx2c3i52knso4ajdwkqn7n3ayj.dkim.amazonses.com"]
#   ttl     = "1800"
#   type    = "CNAME"
#   zone_id = "${aws_route53_zone.smi11-com.zone_id}"
# }
resource "aws_route53_record" "smi11-com-CNAME2" {
  name    = "_bfc04688f31c58cdf179c3781e289f28.smi11.com"
  records = ["_cbbde2ddef4b08a8e3586929d7533bae.gskhnxswdw.acm-validations.aws."]
  ttl     = "300"
  type    = "CNAME"
  zone_id = "${aws_route53_zone.smi11-com.zone_id}"
}
# resource "aws_route53_record" "smi11-com-CNAME3" {
#   name    = "d6bi26c3ahsjhkijn3oy5w6hkcjpt6sy._domainkey.smi11.com"
#   records = ["d6bi26c3ahsjhkijn3oy5w6hkcjpt6sy.dkim.amazonses.com"]
#   ttl     = "1800"
#   type    = "CNAME"
#   zone_id = "${aws_route53_zone.smi11-com.zone_id}"
# }
# resource "aws_route53_record" "smi11-com-CNAME4" {
#   name    = "s2oqgy7jk3isynkh2mx6amt4qrtszmrx._domainkey.smi11.com"
#   records = ["s2oqgy7jk3isynkh2mx6amt4qrtszmrx.dkim.amazonses.com"]
#   ttl     = "1800"
#   type    = "CNAME"
#   zone_id = "${aws_route53_zone.smi11-com.zone_id}"
# }
resource "aws_route53_record" "smi11-com-A" {
  alias {
    evaluate_target_health = "false"
    name                   = "${aws_lb.alb-step.dns_name}"
    zone_id                = "${aws_lb.alb-step.zone_id}"
  }
  name    = "smi11.com"
  type    = "A"
  zone_id = "${aws_route53_zone.smi11-com.zone_id}"
}
# 自動で作成されるため不要↓
# resource "aws_route53_record" "smi11-com-NS" {
#   name    = "smi11.com"
#   records = [
#     "ns-1372.awsdns-43.org.",
#     "ns-2034.awsdns-62.co.uk.",
#     "ns-3.awsdns-00.com.",
#     "ns-704.awsdns-24.net."
#   ]
#   ttl     = "172800"
#   type    = "NS"
#   zone_id = "${aws_route53_zone.smi11-com.zone_id}"
# }
# 自動で作成されるため不要↓
# resource "aws_route53_record" "smi11-com-SOA" {
#   name    = "smi11.com"
#   records = ["ns-3.awsdns-00.com. awsdns-hostmaster.amazon.com. 1 7200 900 1209600 86400"]
#   ttl     = "900"
#   type    = "SOA"
#   zone_id = "${aws_route53_zone.smi11-com.zone_id}"
# }
resource "aws_route53_record" "www-smi11-com-A" {
  alias {
    evaluate_target_health = "true"
    name                   = "${aws_lb.alb-step.dns_name}"
    zone_id                = "${aws_lb.alb-step.zone_id}"
  }
  name    = "www.smi11.com"
  type    = "A"
  zone_id = "${aws_route53_zone.smi11-com.zone_id}"
}
# ACM
resource "aws_acm_certificate" "acm-smi11-com" {
  domain_name = "smi11.com"
  options {
    certificate_transparency_logging_preference = "ENABLED"
  }
  subject_alternative_names = ["smi11.com"]
  tags = {
    Name = "acm-step"
  }
  tags_all = {
    Name = "acm-step"
  }
  validation_method = "DNS"
}
# EIP
resource "aws_eip" "eip-step-web1" {
  instance             = "${aws_instance.step-web1.id}"
  network_border_group = "ap-northeast-1"
  # network_interface    = "${aws_network_interface.eni-step-web1.id}"
  public_ipv4_pool     = "amazon"
  tags = {
    Name = "eip-step-web1"
  }
  tags_all = {
    Name = "eip-step-web1"
  }
  vpc = "true"
}
# 自動で作成されるため不要↓
# Elastic network interface
# resource "aws_network_interface" "eni-step-web1" {
#   attachment {
#     device_index = "0"
#     instance     = "${aws_instance.step-web1.id}"
#   }
#   description        = "Primary network interface"
#   ipv4_prefix_count  = "0"
#   ipv6_address_count = "0"
#   ipv6_prefix_count  = "0"
#   private_ip         = "172.16.3.11"
#   security_groups    = [aws_security_group.scg-stepweb1.id]
#   source_dest_check  = "true"
#   subnet_id          = "${aws_subnet.private-a-subnet-step.id}"
#   tags = {
#     Name = "eni-step-web1"
#   }
#   tags_all = {
#     Name = "eni-step-web1"
#   }
# }